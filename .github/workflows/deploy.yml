name: 🚀 Deploy Webdesign Fabrik

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Type checking and linting
  type-check:
    name: 🔍 Type Check & Lint
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Type check
        run: npm run type-check

      - name: 🔍 Lint code
        run: npm run lint

  # Unit and integration tests
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    needs: type-check
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: npm run test

      - name: 📊 Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: false

  # Build application
  build:
    name: 🔨 Build Application
    runs-on: ubuntu-latest
    needs: [type-check, test]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔨 Build application
        run: npm run build

      - name: 📁 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/

  # Performance testing
  performance:
    name: ⚡ Performance Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔨 Build application
        run: npm run build

      - name: 📊 Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: http://localhost:3000
          configPath: .lighthouserc.json
          uploadArtifacts: true
          temporaryPublicStorage: true

  # Deploy to staging (develop branch)
  deploy-staging:
    name: 🚀 Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build, performance]
    if: github.ref == 'refs/heads/develop'
    environment:
      name: staging
      url: https://staging.gcz-webdesign.de
    steps:
      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/

      - name: 🚀 Deploy to staging
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          cname: staging.gcz-webdesign.de
          publish_branch: staging

  # Deploy to production (main branch)
  deploy-production:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: [build, performance]
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://gcz-webdesign.de
    steps:
      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/

      - name: 🚀 Deploy to production
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          cname: gcz-webdesign.de
          publish_branch: production

  # Security scanning
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Security audit
        run: npm audit --audit-level high

      - name: 🔍 Dependency check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'gcz-webdesign'
          path: '.'
          format: 'ALL'

  # Notify on completion
  notify:
    name: 📢 Notify Deployment
    runs-on: ubuntu-latest
    needs: [deploy-staging, deploy-production]
    if: always()
    steps:
      - name: 📢 Notify success
        if: needs.deploy-staging.result == 'success' || needs.deploy-production.result == 'success'
        run: echo "✅ Deployment successful!"

      - name: 🚨 Notify failure
        if: needs.deploy-staging.result == 'failure' || needs.deploy-production.result == 'failure'
        run: echo "❌ Deployment failed!"
